<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>SpringMVC2</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  
  <!-- To use Spring MVC, we need to configure a ready made Servlet  by the name DispatcherServlert.
  		DispatcherServlet plays the role of front controller in our application.
  		Additionally , this dispatcherServlet will automatically create spring's
  		ApplicationContext object, so we don't need to write this code anymore:
  		
  			ApplicationContext ctx = new classPathXmlApplicationContext("appconfig.xml");
  	-->
  <servlet>
      <servlet-name>mvc</servlet-name>
      <servlet-class>
         org.springframework.web.servlet.DispatcherServlet
      </servlet-class>
      <init-param>
      		<param-name>contextConfigLocation</param-name>
      		<param-value>/WEB-INF/appConfig.xml</param-value>
      </init-param>
      <load-on-startup>1</load-on-startup>
   </servlet>

   <servlet-mapping>
      <servlet-name>mvc</servlet-name>
      <url-pattern>*.lti</url-pattern>
   </servlet-mapping>
 
  
  
</web-app>